@use 'sass:math';
@use 'fonts' as *;
@use 'variables' as *;
@use 'mixins' as *;

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

::selection {
  background: var(--selection);
  color: var(--base-text-color);
}

html {
  --site-scale: calc(100vw / var(--desktop));

  font-size: calc(var(--site-scale) * #{16});

  @include to(var(--lg)) {
    --site-scale: calc(100vw / var(--lg));
  }

  @include to(var(--tablet)) {
    --site-scale: calc(100vw / var(--tablet));
  }

  @include to(var(--mobile)) {
    --site-scale: calc(100vw / var(--mobile));
  }
}

body {
  font-family: 'JetBrains Mono', monospace;
  background-color: var(--background);
  color: var(--base-text-color);
  font-optical-sizing: auto;
  min-height: 100dvh;
}

button {
  background-color: transparent;
  border: none;
}

a {
  color: inherit;
  text-decoration: none;
}

.noise {
  position: fixed;
  top: -300%;
  left: -150%;
  width: 600%;
  height: 600%;
  opacity: 0.2;
  z-index: 9999;
  animation: noise-grain 9s steps(10) infinite;
  background-image: url('@/shared/assets/images/noise.webp');
  background-size: 12.5rem;
  background-repeat: repeat;
  pointer-events: none;
}

.container {
  max-width: 75rem;
  margin: 0 auto;
  padding: 0 1rem;
}

/* ==== Background noise ==== */
@keyframes noise-grain {
  0%,
  100% {
    transform: translate(0); // Возврат к начальному положению
  }

  @for $i from 1 through 9 {
    #{($i * 10) + '%'} {
      transform: translate(#{math.random(30) - 15} + '%', #{math.random(30) - 15} + '%');
    }
  }
}
